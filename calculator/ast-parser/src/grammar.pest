Program = _{ SOI ~ Expr ~ EOF }

Expr = { UnaryExpr | BinaryExpr | Term }

Term = _{ Number | "(" ~ Expr ~ ")" }

UnaryExpr = { Sign ~ Term }

BinaryExpr = { Term ~ (Operator ~ Term)+ }

Operator = _{ plus | minus | mul | div }
    plus = { "+" }
    minus = { "-" }
    mul = { "*" }
    div = { "/" }

Sign = _{ positive | negative }
    positive = { "+" }
    negative = { "-" }

Number = @{
    Sign? 
    ~ ASCII_DIGIT+
    ~ ("." ~ ASCII_DIGIT+)?
}

WHITESPACE = _{ " " | "\t" }

EOF = _{ EOI | ";" }
